# This yaml shares the build bridge steps with ci and nightly.
name: Build flutter-rust-bridge
# 2023-11-23 18:00:00+00:00

on:
  workflow_call:
    inputs:
      version:
        description: 'Rustdesk Version'
        required: true
        default: '1.3.1'
        type: string
      extras:
        description: 'Extra build parameters'
        required: false
        type: string
        default: '{}'

env:
  FLUTTER_VERSION: "3.24.5"
  FLUTTER_RUST_BRIDGE_VERSION: "1.80.1"
  RUST_VERSION: "1.81"
  MAC_RUST_VERSION: "1.81" 
  VERSION: ${{ inputs.version }}

jobs:
  generate_bridge:
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: aarch64-apple-darwin,
              os: macos-latest,
              arch: aarch64,
              extra-build-args: "",
              flutter: "3.24.5",
              ref: "f6509e3fd6917aa976bad2fc684182601ebf2434",
              bridge: "1.80.1",
              date: "20231219"
            }
 
    steps:
      - name: Checkout source code
        if: ${{ inputs.version != 'master' }}
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          ref: refs/tags/${{ inputs.version }}
          submodules: recursive
        
      - name: Checkout source code
        if: ${{ inputs.version == 'master' }}
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          submodules: recursive

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: "rustfmt"

      - name: Configure git and cargo
        run: |
          git config --global http.postBuffer 524288000
          git config --global core.compression 0
          git config --global http.lowSpeedLimit 1000
          git config --global http.lowSpeedTime 300
          git config --global url."https://".insteadOf git://
          # Enable git fetch with CLI for cargo
          mkdir -p ~/.cargo
          echo '[net]' > ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
          echo 'retry = 5' >> ~/.cargo/config.toml

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ matrix.job.flutter }}
          cache: true

      - name: Verify Submodules
        run: |
          git submodule status
          git submodule foreach git status

      - name: Install flutter_rust_bridge_codegen
        run: |
          cargo install flutter_rust_bridge_codegen --version ${{ env.FLUTTER_RUST_BRIDGE_VERSION }} --features "uuid"
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
          CARGO_NET_RETRY: 10

      - name: Create necessary directories
        run: |
          mkdir -p src
          mkdir -p flutter/lib
          mkdir -p flutter/macos/Runner

      - name: Flutter Setup and Bridge Generation
        run: |
          # Add necessary paths
          export PATH="$PATH:/Users/runner/.pub-cache/bin"
          export DART_SDK="/Users/runner/hostedtoolcache/flutter/stable-3.24.5-arm64/bin/cache/dart-sdk"
          export PATH="$DART_SDK/bin:$PATH"
          
          # Manual fetch of libwebm
          git clone https://chromium.googlesource.com/webm/libwebm libs/scrap/src/sys/libwebm || true
          
          cd flutter
          flutter config --no-analytics
          flutter doctor -v
          
          # Clean and get dependencies with retry
          for i in {1..3}; do
            flutter clean && flutter pub get && break || sleep 15
          done
          
          # Disable analytics
          dart --disable-analytics
          
          # Remove old generated files and cache
          rm -rf .dart_tool/build
          rm -rf build
          
          # Install and run build_runner
          dart pub add --dev build_runner
          dart pub get
          
          # Create initial bridge file
          echo "// Auto-generated by flutter_rust_bridge" > ../src/bridge_generated.rs
          mkdir -p lib
          mkdir -p macos/Runner
          
          # Generate bridge files with retry
          for i in {1..3}; do
            flutter_rust_bridge_codegen \
              --rust-input ../src/bridge_generated.rs \
              --dart-output ./lib/generated_bridge.dart \
              --c-output ./macos/Runner/bridge_generated.h \
              --dart-decl-output ./lib/bridge_definitions.dart \
              --wasm && break || sleep 15
          done
        shell: /bin/bash -e {0}
        env:
          FLUTTER_VERSION: 3.24.5
          FLUTTER_RUST_BRIDGE_VERSION: 1.80.1
          RUST_VERSION: 1.81
          MAC_RUST_VERSION: 1.81
          VERSION: 1.3.2
          CARGO_INCREMENTAL: 0
          CARGO_TERM_COLOR: always
          CARGO_NET_GIT_FETCH_WITH_CLI: "true"
          CARGO_NET_RETRY: "5"
          FLUTTER_ROOT: /Users/runner/hostedtoolcache/flutter/stable-3.24.5-arm64
          PUB_CACHE: /Users/runner/.pub-cache
          DART_SDK: /Users/runner/hostedtoolcache/flutter/stable-3.24.5-arm64/bin/cache/dart-sdk

      - name: Upload Bridge Files
        uses: actions/upload-artifact@v3
        with:
          name: bridge-files
          path: |
            ./src/bridge_generated.rs
            ./src/bridge_generated.io.rs
            ./flutter/lib/generated_bridge.dart
            ./flutter/lib/generated_bridge.freezed.dart
            ./flutter/macos/Runner/bridge_generated.h
            ./flutter/ios/Runner/bridge_generated.h
