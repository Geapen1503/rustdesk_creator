# This yaml shares the build bridge steps with ci and nightly.
name: Generate Bridge Files
on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      platform:
        required: true
        type: string
        default: 'linux'

env:
  FLUTTER_VERSION: "3.24.5"
  FLUTTER_RUST_BRIDGE_VERSION: "1.80.1"
  RUST_VERSION: "1.75"
  MAC_RUST_VERSION: "1.81"

jobs:
  generate-bridge:
    runs-on: ${{ inputs.platform == 'macos' && 'macos-latest' || 'ubuntu-latest' }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          ref: ${{ inputs.version != 'master' && format('refs/tags/{0}', inputs.version) || 'master' }}

      # Platform specific setup
      - name: Setup for macOS
        if: inputs.platform == 'macos'
        run: |
          brew install llvm@15
          echo "LLVM_PATH=/opt/homebrew/opt/llvm@15" >> $GITHUB_ENV

      - name: Setup for Linux
        if: inputs.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-dev libclang-dev

      # Common setup steps
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ inputs.platform == 'macos' && env.MAC_RUST_VERSION || env.RUST_VERSION }}
          targets: ${{ inputs.platform == 'macos' && 'aarch64-apple-darwin' || 'x86_64-unknown-linux-gnu' }}
          components: "rustfmt"

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ inputs.platform }}-bridge

      - name: Cache Bridge
        id: cache-bridge
        uses: actions/cache@v3
        with:
          path: /tmp/flutter_rust_bridge
          key: vcpkg-${{ inputs.platform }}

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          architecture: ${{ inputs.platform == 'macos' && 'ARM64' || 'x64' }}
          cache: true

      - name: Setup Flutter project
        run: |
          cd flutter
          flutter pub get
          flutter config --enable-macos-desktop
          flutter pub add build_runner --dev
          flutter pub add freezed_annotation
          flutter pub add freezed --dev
          flutter pub add flutter_rust_bridge
          flutter pub add ffigen
          flutter pub get
          cd ..

      - name: Install flutter_rust_bridge_codegen
        run: |
          cargo install flutter_rust_bridge_codegen --version ${{ env.FLUTTER_RUST_BRIDGE_VERSION }} --features "uuid"

      - name: Generate bridge files
        run: |
          cd flutter
          mkdir -p lib/generated
          mkdir -p ${{ inputs.platform == 'macos' && 'macos/Runner' || 'linux/runner' }}
          
          # Create package config first
          flutter pub get
          
          # Initialize Flutter project if needed
          if [ ! -f "pubspec.yaml" ]; then
            flutter create .
          fi
          
          ~/.cargo/bin/flutter_rust_bridge_codegen \
            --rust-input ../src/flutter_ffi.rs \
            --dart-output lib/generated/bridge_generated.dart \
            --c-output ${{ inputs.platform == 'macos' && 'macos/Runner/bridge_generated.h' || 'linux/runner/bridge_generated.h' }} \
            --dart-decl-output lib/generated/bridge_definitions.dart \
            --class-name RustDesk \
            ${{ inputs.platform == 'macos' && '--llvm-path /opt/homebrew/opt/llvm@15' || '' }} \
            --skip-add-mod-to-lib \
            --no-build-runner

      - name: Upload bridge files
        uses: actions/upload-artifact@master
        with:
          name: bridge-artifact-${{ inputs.platform }}
          path: |
            ./flutter/lib/generated/
            ./flutter/${{ inputs.platform == 'macos' && 'macos/Runner/' || 'linux/runner/' }}
