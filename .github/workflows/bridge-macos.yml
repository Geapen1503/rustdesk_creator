name: Build flutter-rust-bridge for macOS
on:
  workflow_call:
    inputs:
      version:
        description: 'Rustdesk Version'
        required: false
        type: string
        default: "master"

env:
  FLUTTER_VERSION: "3.24.5"
  FLUTTER_RUST_BRIDGE_VERSION: "1.80.1"
  RUST_VERSION: "1.75"
  RUST_BACKTRACE: "full"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "1de2026f28ead93ff1773e6e680387643e914ea1"

jobs:
  generate_bridge:
    runs-on: macos-latest
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          ref: ${{ inputs.version != 'master' && format('refs/tags/{0}', inputs.version) || 'master' }}
          submodules: recursive

      - name: Install build runtime (macOS)
        run: |
          brew install \
            cmake \
            gcc \
            pkg-config \
            wget \
            nasm \
            yasm \
            ninja \
            llvm \
            create-dmg

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Patch flutter
        continue-on-error: true
        run: |
          cp .github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff $(dirname $(dirname $(which flutter)))
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.4" == ${{env.FLUTTER_VERSION}} ]] && git apply flutter_3.24.4_dropdown_menu_enableFilter.diff

      - name: Workaround for flutter issue
        run: |
          cd $(dirname $(dirname $(which flutter)))
          git config --global --add safe.directory /Users/runner/hostedtoolcache/flutter/stable-3.24.5-arm64
          git config --global --add safe.directory /Users/runner/hostedtoolcache/flutter/stable-3.24.5-arm64/packages/flutter_tools/templates/app/android.tmpl
          git config --global --add safe.directory /Users/runner/hostedtoolcache/flutter/stable-3.24.5-arm64/packages/flutter_tools/templates/module/android.tmpl
          git config --global --add safe.directory /Users/runner/hostedtoolcache/flutter/stable-3.24.5-arm64/packages/flutter_tools/templates/plugin/android.tmpl
          git config --global --add safe.directory /Users/runner/hostedtoolcache/flutter/stable-3.24.5-arm64/packages/flutter_tools/templates/plugin/android-kotlin.tmpl
          git config --global --add safe.directory /Users/runner/hostedtoolcache/flutter/stable-3.24.5-arm64/packages/flutter_tools/templates/skeleton

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: aarch64-apple-darwin
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: macos-latest
          cache-targets: true
          cache-all-crates: false
          save-if: true
          cache-provider: github

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./
          merge-multiple: false
          repository: rustdesk/rustdesk
          run-id: 12041237685

      - name: Setup vcpkg with github actions binary cache
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Create vcpkg directories
        run: |
          mkdir -p ${{ github.workspace }}/vcpkg
          mkdir -p ${{ github.workspace }}/vcpkg_cache

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}

      - name: Install vcpkg dependencies
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
        env:
          VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg_cache
          RUNVCPKG_VCPKG_ROOT: ${{ github.workspace }}/vcpkg
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg

      - name: Generate bridge files
        run: |
          mkdir -p flutter/lib/generated
          mkdir -p flutter/macos/Runner
          mkdir -p flutter/ios/Runner

          flutter_rust_bridge_codegen \
            --rust-input src/flutter_ffi.rs \
            --dart-output flutter/lib/generated/bridge_generated.dart \
            --c-output flutter/macos/Runner/bridge_generated.h \
            --dart-decl-output flutter/lib/generated/bridge_definitions.dart \
            --class-name RustDesk

          cp flutter/macos/Runner/bridge_generated.h flutter/ios/Runner/

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: bridge-artifact-macos
          path: |
            ./src/bridge_generated.rs
            ./src/bridge_generated.io.rs
            ./flutter/lib/generated/bridge_generated.dart
            ./flutter/lib/generated/bridge_definitions.dart
            ./flutter/macos/Runner/bridge_generated.h
            ./flutter/ios/Runner/bridge_generated.h
