name: Bridge Generation macOS

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        default: "master"
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.13.9"
  FLUTTER_RUST_BRIDGE_VERSION: "1.75.3"
  RUST_VERSION: "1.75"

jobs:
  generate-bridge:
    name: Generate Bridge Code
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: aarch64-apple-darwin,
              bridge: "1.75.3",
              extra-build-args: "--screencapturekit",
            }
    steps:
      - name: Checkout source code
        if: ${{ inputs.version != 'master' }}
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          ref: ${{ format('refs/tags/{0}', inputs.version) }}
          submodules: recursive

      - name: Checkout master
        if: ${{ inputs.version == 'master' }}
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
      
      - name: Install build runtime
        run: |
            brew install llvm create-dmg nasm cmake gcc wget ninja
            # pkg-config is handled in a separate step, because it may be already installed by `macos-latest`(14.7.1) runner
            if command -v pkg-config &>/dev/null; then
            echo "pkg-config is already installed"
            else
            brew install pkg-config
            fi

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: aarch64-apple-darwin
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: bridge-macos

      - name: Install flutter rust bridge deps
        shell: bash
        run: |
          cd flutter
          flutter clean
          flutter pub get
          
          cd ..
          cargo install flutter_rust_bridge_codegen --version ${{ env.FLUTTER_RUST_BRIDGE_VERSION }} --features "uuid"
          
          cd flutter
          export DART_SDK=$(dirname $(which dart))
          
          flutter_rust_bridge_codegen \
            --rust-input ../src/flutter_ffi.rs \
            --dart-output ./lib/generated_bridge.dart \
            --c-output ./macos/Runner/bridge_generated.h \
            --dart-decl-output ./lib/bridge_definitions.dart
          
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Upload bridge artifacts
        uses: actions/upload-artifact@master
        with:
          name: bridge-artifact-macos
          path: |
            ./src/bridge_generated.rs
            ./src/bridge_generated.io.rs
            ./flutter/lib/generated_bridge.dart
            ./flutter/lib/generated_bridge.freezed.dart
