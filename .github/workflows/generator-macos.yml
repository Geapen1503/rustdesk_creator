name: Custom macOS Client Generator
run-name: Custom macOS Client Generator
on: 
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: 'rs-ny.rustdesk.com'
        type: string
      key:
        description: 'Public Key'
        required: true
        default: 'OeVuKk5nlHiXp+APNn0Y3pC1Iwpwn44JGqrQCsWqaSg='
        type: string
      apiServer:
        description: 'API Server'
        required: false
        type: string
      customJSON:
        description: 'Custom JSON'
        required: false
        type: string
      uuid:
        description: 'UUID'
        required: false
        type: string
      iconlink:
        description: 'Icon Link'
        required: false
        type: string
      logolink:
        description: 'Logo Link'
        required: false
        type: string
      appname:
        description: 'App Name'
        required: false
        type: string
      filename:
        description: 'File Name'
        required: false
        type: string
      extras:
        description: 'Extras'
        required: false
        type: string

env:
  FLUTTER_VERSION: "3.24.5"
  FLUTTER_RUST_BRIDGE_VERSION: "1.80.1"
  RUST_VERSION: "1.81"
  MACOS_MIN_VER: "12.3"
  STATUS_URL: "${{ format('https://api.rustdesk.com/status/{0}', inputs.uuid) }}"

jobs:
  bridge:
    uses: ./.github/workflows/bridge-macos.yml
    with:
      version: '1.3.1'

  build-macos:
    needs: [bridge]
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: macos-13
            target: x86_64-apple-darwin
          - arch: arm64
            runner: macos-14
            target: aarch64-apple-darwin
    
    name: Build macOS (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download bridge artifacts
        uses: actions/download-artifact@v3
        with:
          name: bridge-macos-${{ matrix.target }}-artifact
          path: ./

      - name: Install build dependencies
        run: |
          brew install llvm create-dmg nasm cmake gcc wget ninja pkg-config

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.target }}
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: macos-${{ matrix.runner }}

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Setup environment
        env:
          RUSTDESK_SERVER: ${{ inputs.server }}
          RUSTDESK_KEY: ${{ inputs.key }}
        run: |
          if [[ -n "${{ inputs.apiServer }}" ]]; then
            echo "RUSTDESK_API_SERVER=${{ inputs.apiServer }}" >> $GITHUB_ENV
          fi
          if [[ -n "${{ inputs.customJSON }}" ]]; then
            echo "RUSTDESK_CUSTOM_JSON=${{ inputs.customJSON }}" >> $GITHUB_ENV
          fi
          if [[ -n "${{ inputs.uuid }}" ]]; then
            echo "RUSTDESK_UUID=${{ inputs.uuid }}" >> $GITHUB_ENV
          fi
          if [[ -n "${{ inputs.appname }}" ]]; then
            echo "RUSTDESK_APPNAME=${{ inputs.appname }}" >> $GITHUB_ENV
          fi
          if [[ -n "${{ inputs.extras }}" ]]; then
            echo "RUSTDESK_EXTRAS=${{ inputs.extras }}" >> $GITHUB_ENV
          fi

      - name: Download resources
        run: |
          if [[ -n "${{ inputs.iconlink }}" ]]; then
            wget -O ./res/mac-tray-light.png ${{ inputs.iconlink }}
          fi
          if [[ -n "${{ inputs.logolink }}" ]]; then
            wget -O ./res/mac-tray-dark.png ${{ inputs.logolink }}
          fi

      - name: Set minimum macOS version
        run: |
          sed -i -e "s/MACOSX_DEPLOYMENT_TARGET\=[0-9]*.[0-9]*/MACOSX_DEPLOYMENT_TARGET=${MACOS_MIN_VER}/" build.py
          sed -i -e "s/platform :osx, '.*'/platform :osx, '${MACOS_MIN_VER}'/" flutter/macos/Podfile
          sed -i -e "s/osx_minimum_system_version = \"[0-9]*.[0-9]*\"/osx_minimum_system_version = \"${MACOS_MIN_VER}\"/" Cargo.toml
          sed -i -e "s/MACOSX_DEPLOYMENT_TARGET = [0-9]*.[0-9]*;/MACOSX_DEPLOYMENT_TARGET = ${MACOS_MIN_VER};/" flutter/macos/Runner.xcodeproj/project.pbxproj

      - name: cargo.toml, runner.rc name, en.rs
        continue-on-error: true
        shell: bash
        run: |
          cp ./Cargo.toml ./Cargo.toml.bak
          sed -i -e "s/name = \"rustdesk\"/name = \"${{ inputs.appname || 'rustdesk' }}\"/" ./Cargo.toml
          sed -i -e "s/RustDesk/${{ inputs.appname || 'rustdesk' }}/" ./src/lang/en.rs
          sed -i -e "s/RustDesk/${{ inputs.appname || 'rustdesk' }}/" ./flutter/macos/Runner/Info.plist
          sed -i -e "s/RustDesk/${{ inputs.appname || 'rustdesk' }}/" ./flutter/macos/Runner.xcodeproj/project.pbxproj

      - name: Build macOS app
        run: |
          pushd flutter
          flutter build macos --release
          popd

      - name: Create DMG
        run: |
          APP_NAME="${{ inputs.appname || 'rustdesk' }}"
          DMG_NAME="${{ inputs.filename || 'rustdesk' }}-${{ matrix.arch }}.dmg"
          
          # Create DMG
          create-dmg \
            --volname "$APP_NAME" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "$APP_NAME.app" 200 190 \
            --hide-extension "$APP_NAME.app" \
            --app-drop-link 600 185 \
            "$DMG_NAME" \
            "flutter/build/macos/Build/Products/Release/$APP_NAME.app"

      - name: Import the codesign cert
        if: env.MACOS_P12_BASE64 != ''
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MACOS_P12_BASE64 }}
          p12-password: ${{ secrets.MACOS_P12_PASSWORD }}
          keychain: rustdesk

      - name: Check sign and import sign key
        if: env.MACOS_P12_BASE64 != ''
        run: |
          # Unlock keychain
          security default-keychain -s rustdesk.keychain
          security find-identity -v

      - name: Import notarize key
        if: env.MACOS_P12_BASE64 != ''
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: rustdesk.json
          fileDir: ${{ github.workspace }}
          encodedString: ${{ secrets.MACOS_NOTARIZE_JSON }}

      - name: Install rcodesign tool
        if: env.MACOS_P12_BASE64 != ''
        shell: bash
        run: |
          pushd /tmp
          wget https://github.com/indygreg/apple-platform-rs/releases/download/apple-codesign%2F0.22.0/apple-codesign-0.22.0-macos-universal.tar.gz
          tar -zxvf apple-codesign-0.22.0-macos-universal.tar.gz
          mv apple-codesign-0.22.0-macos-universal/rcodesign /usr/local/bin
          popd

      - name: Code Sign (if credentials available)
        if: env.MACOS_P12_BASE64 != ''
        run: |
          # Unlock keychain
          security default-keychain -s rustdesk.keychain
          security unlock-keychain -p ${{ secrets.MACOS_P12_PASSWORD }} rustdesk.keychain
          # Sign app and DMG
          codesign --force --options runtime -s "${{ secrets.MACOS_CODESIGN_IDENTITY }}" --deep --strict ./flutter/build/macos/Build/Products/Release/${{ inputs.appname || 'rustdesk' }}.app -vvv
          create-dmg \
            --volname "${{ inputs.appname || 'rustdesk' }}" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "${{ inputs.appname || 'rustdesk' }}.app" 200 190 \
            --hide-extension "${{ inputs.appname || 'rustdesk' }}.app" \
            --app-drop-link 600 185 \
            "${{ inputs.filename || 'rustdesk' }}-${{ matrix.arch }}.dmg" \
            "flutter/build/macos/Build/Products/Release/${{ inputs.appname || 'rustdesk' }}.app"
          codesign --force --options runtime -s "${{ secrets.MACOS_CODESIGN_IDENTITY }}" --deep --strict "${{ inputs.filename || 'rustdesk' }}-${{ matrix.arch }}.dmg" -vvv
          # Notarize the DMG
          rcodesign notary-submit --api-key-path ${{ github.workspace }}/rustdesk.json --staple "${{ inputs.filename || 'rustdesk' }}-${{ matrix.arch }}.dmg"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.filename || 'rustdesk' }}-macos-${{ matrix.arch }}
          path: ${{ inputs.filename || 'rustdesk' }}-${{ matrix.arch }}.dmg

      
