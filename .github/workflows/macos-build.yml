name: Build RustDesk macOS

on: 
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: ''
        type: string
      key:
        description: 'Public Key'
        required: true
        default: ''
        type: string
      apiServer:
        description: 'API Server'
        required: true
        default: ''
        type: string
      custom:
        description: "Custom JSON"
        required: true
        default: ''
        type: string
      uuid:
        description: "uuid of request"
        required: true
        default: ''
        type: string
      iconlink:
        description: "icon link"
        required: false
        default: 'false'
        type: string
      logolink:
        description: "logo link"
        required: false
        default: 'false'
        type: string
      appname:
        description: "app name"
        required: true
        default: 'rustdesk'
        type: string
      filename:
        description: "Filename"
        required: true
        default: 'rustdesk'
        type: string
      extras:
        description: "extra inputs in json"
        required: true
        default: '{}'
        type: string

env:
  RUST_VERSION: "1.81"  # Required for macOS builds
  FLUTTER_VERSION: "3.24.5"
  MACOS_MIN_VER: "12.3"  # Minimum supported macOS version

jobs:
  build-macos:
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: macos-13
            target: x86_64-apple-darwin
          - arch: arm64
            runner: macos-14
            target: aarch64-apple-darwin
    
    name: Build macOS (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          brew install llvm create-dmg nasm cmake gcc wget ninja pkg-config

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.target }}

      - name: Set minimum macOS version
        run: |
          sed -i -e "s/MACOSX_DEPLOYMENT_TARGET\=[0-9]*.[0-9]*/MACOSX_DEPLOYMENT_TARGET=${MACOS_MIN_VER}/" build.py
          sed -i -e "s/platform :osx, '.*'/platform :osx, '${MACOS_MIN_VER}'/" flutter/macos/Podfile
          sed -i -e "s/osx_minimum_system_version = \"[0-9]*.[0-9]*\"/osx_minimum_system_version = \"${MACOS_MIN_VER}\"/" Cargo.toml
          sed -i -e "s/MACOSX_DEPLOYMENT_TARGET = [0-9]*.[0-9]*;/MACOSX_DEPLOYMENT_TARGET = ${MACOS_MIN_VER};/" flutter/macos/Runner.xcodeproj/project.pbxproj

      - name: Build RustDesk
        run: |
          ./build.py --flutter --hwcodec

      - name: Create DMG
        if: inputs.upload-artifacts
        run: |
          create-dmg \
            --icon "RustDesk.app" 200 190 \
            --hide-extension "RustDesk.app" \
            --window-size 800 400 \
            --app-drop-link 600 185 \
            rustdesk-${{ inputs.version }}-${{ matrix.arch }}.dmg \
            ./flutter/build/macos/Build/Products/Release/RustDesk.app

      - name: Code Sign (if credentials available)
        if: inputs.upload-artifacts && env.MACOS_P12_BASE64 != ''
        env:
          MACOS_P12_BASE64: ${{ secrets.MACOS_P12_BASE64 }}
          MACOS_P12_PASSWORD: ${{ secrets.MACOS_P12_PASSWORD }}
          MACOS_CODESIGN_IDENTITY: ${{ secrets.MACOS_CODESIGN_IDENTITY }}
        run: |
          # Import certificate
          echo $MACOS_P12_BASE64 | base64 --decode > certificate.p12
          security create-keychain -p "$MACOS_P12_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$MACOS_P12_PASSWORD" build.keychain
          security import certificate.p12 -k build.keychain -P "$MACOS_P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_P12_PASSWORD" build.keychain
          
          # Sign app and DMG
          codesign --force --options runtime -s "$MACOS_CODESIGN_IDENTITY" --deep ./flutter/build/macos/Build/Products/Release/RustDesk.app
          codesign --force --options runtime -s "$MACOS_CODESIGN_IDENTITY" rustdesk-${{ inputs.version }}-${{ matrix.arch }}.dmg

      - name: Upload artifacts
        if: inputs.upload-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rustdesk-macos-${{ matrix.arch }}
          path: rustdesk-${{ inputs.version }}-${{ matrix.arch }}.dmg
